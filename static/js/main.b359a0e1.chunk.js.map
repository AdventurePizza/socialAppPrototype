{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["dAppClient","DAppClient","name","App","useState","activeAccount","setActiveAccount","setSynced","setShowUnsync","tokens","setTokens","more","setMore","owned","setOwned","setBgImage","getActiveAccount","clearActiveAccount","then","address","console","log","requestPermissions","permissions","toBGImage","index","bgObjkt","length","display_uri","replace","useEffect","slice","getAcc","query","fetch","method","headers","body","JSON","stringify","variables","res","json","result","data","getTokens","query_latest","getRandomInt","max","Math","floor","random","rand","query_owned","Button","size","onClick","unsync","sync","style","display","justifyContent","width","textAlign","fontSize","marginTop","map","token","padding","backgroundImage","marginBlock","backgroundColor","window","open","token_id","color","whiteSpace","WebkitLineClamp","WebkitBoxOrient","overflowWrap","overflow","description","alignItems","split","marginLeft","creators","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.b359a0e1.chunk.js","sourcesContent":["// @ts-nocheck\nimport logo from './logo.svg';\nimport './App.css';\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card, Button } from \"@material-ui/core\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [tokens, setTokens] = useState();\n  const [more, setMore] = useState(-1);\n  const [owned, setOwned] = useState();\n  const [bgImage, setBgImage] = useState(\"\");\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  useEffect(() => {\n\n\n    //get tokens KT1J6NY5AU61GzUX51n59wwiZcGJ9DrNTwbK\n    async function getTokens(query) {\n      let created;\n      await fetch('https://unstable-do-not-use-in-production-api.teztok.com/v1/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: {},\n        }\n        ),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result)\n\n\n\n          if (result.data && result.data.tokens) {\n            setTokens(result.data.tokens)\n\n          }\n        });\n    }\n    getTokens(query_latest);\n  }, []);\n\n\n  useEffect(() => {\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n\n    async function getTokens(query) {\n      let created;\n      await fetch('https://unstable-do-not-use-in-production-api.teztok.com/v1/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: { \"address\": activeAccount ? activeAccount.address : \"\" },\n        }\n        ),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result)\n          if (result.data && result.data.tokens)\n            setOwned(result.data.tokens)\n\n          let bgObjkt\n          if (result.data.tokens.length > 0) {\n            let rand = getRandomInt(result.data.tokens.length)\n            bgObjkt = result.data.tokens[rand].display_uri;\n          }\n          if (bgObjkt) {\n            setBgImage(bgObjkt.replace('ipfs://', 'https://ipfs.io/ipfs/'));\n          }\n        });\n    }\n    getTokens(query_owned);\n  }, [activeAccount]);\n\n  function toBGImage(index) {\n    let bgObjkt = owned[index % (owned.length - 1)].display_uri;\n    if (bgObjkt)\n      return bgObjkt.replace('ipfs://', 'https://ipfs.io/ipfs/')\n  }\n\n\n  return (\n    <div>\n      <Button\n        size={\"small\"}\n        onClick={() => {\n          if (activeAccount) {\n            unsync()\n          } else {\n            sync()\n          }\n        }}\n      >\n        {\" \"}\n        {activeAccount ? (\n          <u>unsync</u>\n        ) : (\n          <u>sync</u>\n        )}{\" \"}\n      </Button>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div style={{ width: \"56.25vw\" }}>\n          <div style={{ textAlign: \"center\", fontSize: \"1.2em\", marginTop: 10 }}>Typed Art</div>\n          <br></br>\n          {tokens && tokens.map((token, index) => (\n            <div key={index} style={{ padding: 20, backgroundImage: `url(${toBGImage(index)})` }}>\n              <div style={{ marginBlock: 20, padding: 2, backgroundColor: \"white\" }}>\n\n                <div style={{ display: \"flex\", justifyContent: \"right\" }}>\n                  <Button size=\"small\" onClick={() => { window.open(`https://typed.art/${token.token_id}`, \"_blank\") }} style={{ color: \"black\" }}>{token.token_id}#</Button>\n                </div>\n                <p style={{ whiteSpace: 'pre-wrap', WebkitLineClamp: more === index ? 50 : 8, WebkitBoxOrient: \"vertical\", display: \"-webkit-box\", overflowWrap: \"break-word\", overflow: \"hidden\" }}>\n                  {token.description}\n                </p>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  {token.description && token.description.split(/\\r\\n|\\r|\\n/).length > 8 && <Button size=\"small\" onClick={() => { setMore(index) }} style={{ color: \"black\" }}>{more !== index ? \"more\" : \"less\"}</Button>}\n                  <div style={{ marginLeft: \"auto\" }}>\n                    <Button size=\"small\" onClick={() => { window.open(`https://assemblr.xyz/?profile=${token.creators[0]}`, \"_blank\") }} style={{ color: \"black\" }}>{token.creators[0] && token.creators[0].slice(0, 10) + \"...\" + token.creators[0].slice(28, 36)}</Button>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          ))\n\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nconst query_latest = `\nquery MyQuery {\n  tokens(where: {fa2_address: {_eq: \"KT1J6NY5AU61GzUX51n59wwiZcGJ9DrNTwbK\"}}, order_by: {minted_at: desc}, limit: 300) {\n    name\n    fa2_address\n    token_id\n    description\n    creators\n  }\n}\n\n\n`\n\n\nconst query_owned = `\nquery ownedTokens ($address: String) {\n    tokens(where: {holdings: {holder_address: {_eq: $address}, amount: {_gt: \"0\"}}}) {\n      artifact_metadata\n      artifact_uri\n      artist_address\n      assets\n      attributes\n      burned_editions\n      contributors\n      creators\n      current_price_to_first_sales_price_diff\n      current_price_to_first_sales_price_pct\n      current_price_to_highest_sales_price_diff\n      current_price_to_highest_sales_price_pct\n      current_price_to_last_sales_price_diff\n      current_price_to_last_sales_price_pct\n      current_price_to_lowest_sales_price_diff\n      current_price_to_lowest_sales_price_pct\n      description\n      display_uri\n      editions\n      eightbid_creator_name\n      eightbid_rgb\n      external_uri\n      fa2_address\n      first_sales_price\n      formats\n      fx_issuer_id\n      fx_iteration\n      highest_offer_price\n      highest_sales_price\n      last_processed_event_id\n      last_processed_event_level\n      last_processed_event_timestamp\n      last_sale_at\n      last_sales_price\n      lowest_sales_price\n      metadata_uri\n      mime_type\n      mint_price\n      minted_at\n      minter_address\n      name\n      objkt_artist_collection_id\n      platform\n      price\n      right_uri\n      rights\n      royalties\n      royalties_total\n      sales_count\n      sales_volume\n      symbol\n      thumbnail_uri\n      token_id\n    }\n  }\n  \n`\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={3}>\n    <App />\n  </SnackbarProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}