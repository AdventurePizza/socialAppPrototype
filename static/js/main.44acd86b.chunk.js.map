{"version":3,"sources":["firebaseContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getProfileFB","Promise","resolve","isSuccessful","setProfileFB","getAllProfilesFB","fetchBase","FirebaseProvider","children","useCallback","key","fetch","method","fetchRes","ok","json","profile","headers","body","JSON","stringify","message","statusText","Provider","value","dAppClient","DAppClient","name","socketURL","window","location","hostname","socket","io","transports","tempID","uuidv4","App","useState","activeAccount","setActiveAccount","setSynced","setShowUnsync","tokens","setTokens","more","setMore","owned","setOwned","setBgImage","useContext","statusHistory","setStatusHistory","posts","setPosts","emoji","setEmoji","usernameInput","setUsernameInput","timestamp","Date","now","username","updateStatus","emit","address","concat","sort","a","b","parseFloat","sync","getActiveAccount","clearActiveAccount","then","console","log","requestPermissions","permissions","toBGImage","index","length","bgObjkt","display_uri","replace","useEffect","result","history","getProfiles","reso","reverse","slice","getAcc","convertdate","x","mintedat","parse","minted_at","query","variables","res","data","ress","map","getTokens","query_latest","getRandomInt","max","Math","floor","random","rand","query_owned","Button","size","onClick","unsync","style","display","justifyContent","width","textAlign","fontSize","marginTop","marginLeft","marginRight","title","onSelect","native","alignItems","TextField","id","label","variant","placeholder","onChange","event","target","onKeyPress","height","border","marginInline","post","padding","backgroundImage","marginBlock","backgroundColor","open","token_id","color","whiteSpace","WebkitLineClamp","WebkitBoxOrient","overflowWrap","overflow","description","split","creators","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.44acd86b.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\ninterface IProfile {\n  color: string;\n  timestamp: Date;\n  key: string;\n  username: string;\n}\nexport interface IFirebaseContext {\n  getProfileFB: (key: string) => Promise<IFetchResponseBase>;\n  setProfileFB: (profile: IProfile) => Promise<IFetchResponseBase>;\n\n  getAllProfilesFB: () => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  setProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  getAllProfilesFB: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network2-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getProfileFB = useCallback(\n    async (key: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile/${key}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setProfileFB = useCallback(\n    async (profile: IProfile): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ profile: profile }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getAllProfilesFB =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/allProfiles`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getProfileFB,\n        setProfileFB,\n        getAllProfilesFB,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport './App.css';\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card, Button, TextField } from \"@material-ui/core\";\nimport io from \"socket.io-client\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://socialapp-tezos-backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst tempID = uuidv4();\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [tokens, setTokens] = useState();\n  const [more, setMore] = useState(-1);\n  const [owned, setOwned] = useState();\n  const [bgImage, setBgImage] = useState(\"\");\n  const [postInput, setPostInput] = React.useState(\"\");\n\n\n\n  const { getProfileFB, setProfileFB, getAllProfilesFB } =\n    useContext(FirebaseContext);\n\n  const [statusHistory, setStatusHistory] = useState([]);\n\n  const [posts, setPosts] = useState([]);\n\n  const [emoji, setEmoji] = useState();\n  const [usernameInput, setUsernameInput] = React.useState(\"Anon\");\n\n  const [profile, setProfile] = useState({\n    emoji: emoji,\n    timestamp: Date.now(),\n    key: tempID,\n    username: \"\",\n  });\n\n  const handleChangeUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length < 25) setUsernameInput(event.target.value);\n    else setUsernameInput(event.target.value.slice(0, 25));\n  };\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getAllProfilesFB();\n      console.log(\"result\")\n      console.log(result)\n      setStatusHistory(result.history);\n    }\n    getProfiles();\n  }, [getAllProfilesFB]);\n\n\n  useEffect(() => {\n    if (tokens && tokens.length > 0 && statusHistory && statusHistory.length > 0) {\n      let reso = posts.concat(statusHistory)\n      reso = reso.concat(tokens)\n\n      reso.sort(function (a, b) {\n        return a.timestamp - b.timestamp;\n      });\n\n      reso.reverse()\n      console.log(reso)\n      setPosts(reso)\n    }\n\n  }, [statusHistory, tokens]);\n\n\n  function updateStatus() {\n    if (activeAccount) {\n      let timestamp = Date.now();\n\n      //add socket\n      socket.emit(\"profile\", {\n        ...profile,\n        emoji: emoji,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setProfileFB({\n        ...profile,\n        emoji: emoji,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setPosts(\n        posts\n          .concat([\n            {\n              ...profile,\n              emoji: emoji,\n              key: activeAccount.address,\n              username: usernameInput,\n              timestamp: timestamp,\n            },\n          ])\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n      /*\n            enqueueSnackbar(\"Status Updated ! \", {\n              variant: \"success\",\n            });*/\n      setUsernameInput(\"\");\n    } else {\n      sync();\n    }\n  }\n\n  const handleChangePost = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPostInput(event.target.value)\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      updateStatus();\n    }\n  };\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  useEffect(() => {\n\n    function convertdate(x) {\n      let mintedat = Date.parse(x.minted_at)\n      x.timestamp = mintedat\n      return x;\n    }\n\n    //get tokens KT1J6NY5AU61GzUX51n59wwiZcGJ9DrNTwbK\n    async function getTokens(query) {\n      let created;\n      await fetch('https://unstable-do-not-use-in-production-api.teztok.com/v1/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: {},\n        }\n        ),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result)\n\n          if (result.data && result.data.tokens) {\n            let ress = result.data.tokens.map((x) => convertdate(x));\n            console.log(ress)\n            setTokens(result.data.tokens)\n          }\n        });\n    }\n    getTokens(query_latest);\n  }, []);\n\n\n  useEffect(() => {\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n\n    async function getTokens(query) {\n      let created;\n      await fetch('https://unstable-do-not-use-in-production-api.teztok.com/v1/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: { \"address\": activeAccount ? activeAccount.address : \"\" },\n        }\n        ),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result)\n          if (result.data && result.data.tokens)\n            setOwned(result.data.tokens)\n\n          let bgObjkt\n          if (result.data.tokens.length > 0) {\n            let rand = getRandomInt(result.data.tokens.length)\n            bgObjkt = result.data.tokens[rand].display_uri;\n          }\n          if (bgObjkt) {\n            setBgImage(bgObjkt.replace('ipfs://', 'https://ipfs.io/ipfs/'));\n          }\n        });\n    }\n    getTokens(query_owned);\n  }, [activeAccount]);\n\n  function toBGImage(index) {\n    if (owned && owned.length > 0) {\n      let bgObjkt = owned[index % (owned.length - 1)].display_uri;\n      if (bgObjkt)\n        return bgObjkt.replace('ipfs://', 'https://ipfs.io/ipfs/')\n    }\n  }\n\n\n  return (\n    <div>\n      <Button\n        size={\"small\"}\n        onClick={() => {\n          if (activeAccount) {\n            unsync()\n          } else {\n            sync()\n          }\n        }}\n      >\n        {\" \"}\n        {activeAccount ? (\n          <u>unsync</u>\n        ) : (\n          <u>sync</u>\n        )}{\" \"}\n      </Button>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div style={{ width: \"56.25vw\" }}>\n          <div style={{ textAlign: \"center\", fontSize: \"1.2em\", marginTop: 10 }}>Typed Art</div>\n          <br></br>\n\n          <div style={{ width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n            <Picker\n              title=\"Pick your emoji\"\n              emoji=\"point_up\"\n              onSelect={(emoji) => {\n                console.log(emoji);\n                setEmoji(emoji.native);\n              }}\n            />\n            <br></br>\n\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <TextField\n                id=\"outlined-basic\"\n                size={\"small\"}\n                label=\"info\"\n                variant=\"outlined\"\n                placeholder=\"Status\"\n                onChange={handleChangeUsername}\n                value={usernameInput}\n                onKeyPress={handleKeyPress}\n              />\n              <div\n                style={{\n                  width: 50,\n                  height: 30,\n                  border: \"solid 4px \",\n                  marginInline: 4,\n                }}\n              >\n                <div style={{ textAlign: \"center\", fontSize: \"1.4em\" }}>\n                  {emoji}\n                </div>\n              </div>\n              <Button\n                size={\"small\"}\n                title={\"update status\"}\n                onClick={() => {\n                  updateStatus();\n                }}\n              >\n                {\" \"}\n                {activeAccount ? (\n                  <u>update status</u>\n                ) : (\n                  <u>sync to join network1</u>\n                )}{\" \"}\n              </Button>\n            </div>\n          </div>\n\n          {/*\n          statusHistory &&\n            statusHistory.map((profile) => (\n              <div\n                key={profile.timestamp}\n                style={{ textAlign: \"center\", marginInline: 6 }}\n              >\n                <div\n                  style={{\n                    width: 100,\n                    height: 30,\n                    border: \"solid 4px \",\n                    marginInline: 4,\n                  }}\n                >\n                  <div style={{ textAlign: \"center\", fontSize: \"1.4em\" }}>\n                    {profile.emoji}\n                  </div>\n                </div>\n\n                <Button\n                  title={profile.key}\n                  size={\"small\"}\n                  onClick={async () => {\n                    window.open(\"https://adventurepizza.github.io/Assemble/?profile=\" + profile.key);\n                  }}\n                >\n                  {profile.username}{\" \"}\n                </Button>\n              </div>\n            ))*/}\n\n          {/*tokens && tokens.map((token, index) => (\n            <div key={index} style={{ padding: 80, backgroundImage: `url(${toBGImage(index)})` }}>\n              <div style={{ marginBlock: 20, padding: 2, backgroundColor: \"white\" }}>\n\n                <div style={{ display: \"flex\", justifyContent: \"right\" }}>\n                  <Button size=\"small\" onClick={() => { window.open(`https://typed.art/${token.token_id}`, \"_blank\") }} style={{ color: \"black\" }}>{token.token_id}#</Button>\n                </div>\n                <p style={{ whiteSpace: 'pre-wrap', WebkitLineClamp: more === index ? 50 : 8, WebkitBoxOrient: \"vertical\", display: \"-webkit-box\", overflowWrap: \"break-word\", overflow: \"hidden\" }}>\n                  {token.description}\n                </p>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  {token.description && token.description.split(/\\r\\n|\\r|\\n/).length > 8 && <Button size=\"small\" onClick={() => { setMore(index) }} style={{ color: \"black\" }}>{more !== index ? \"more\" : \"less\"}</Button>}\n                  <div style={{ marginLeft: \"auto\" }}>\n                    <Button size=\"small\" onClick={() => { window.open(`https://assemblr.xyz/?profile=${token.creators[0]}`, \"_blank\") }} style={{ color: \"black\" }}>{token.creators[0] && token.creators[0].slice(0, 10) + \"...\" + token.creators[0].slice(28, 36)}</Button>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          ))\n*/\n          }\n\n          {posts && posts.map((post, index) => (\n            post.name ?\n              <div key={index} style={{ padding: 80, backgroundImage: `url(${toBGImage(index)})` }}>\n                <div style={{ marginBlock: 20, padding: 2, backgroundColor: \"white\" }}>\n\n                  <div style={{ display: \"flex\", justifyContent: \"right\" }}>\n                    <Button size=\"small\" onClick={() => { window.open(`https://typed.art/${post.token_id}`, \"_blank\") }} style={{ color: \"black\" }}>{post.token_id}#</Button>\n                  </div>\n                  <p style={{ whiteSpace: 'pre-wrap', WebkitLineClamp: more === index ? 50 : 8, WebkitBoxOrient: \"vertical\", display: \"-webkit-box\", overflowWrap: \"break-word\", overflow: \"hidden\" }}>\n                    {post.description}\n                  </p>\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    {post.description && post.description.split(/\\r\\n|\\r|\\n/).length > 8 && <Button size=\"small\" onClick={() => { setMore(index) }} style={{ color: \"black\" }}>{more !== index ? \"more\" : \"less\"}</Button>}\n                    <div style={{ marginLeft: \"auto\" }}>\n                      <Button size=\"small\" onClick={() => { window.open(`https://assemblr.xyz/?profile=${post.creators[0]}`, \"_blank\") }} style={{ color: \"black\" }}>{post.creators[0] && post.creators[0].slice(0, 10) + \"...\" + post.creators[0].slice(28, 36)}</Button>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n              :\n              <div\n                key={post.timestamp}\n                style={{ textAlign: \"center\", marginInline: 6 }}\n              >\n                <div\n                  style={{\n                    width: 100,\n                    height: 30,\n                    border: \"solid 4px \",\n                    marginInline: 4,\n                  }}\n                >\n                  <div style={{ textAlign: \"center\", fontSize: \"1.4em\" }}>\n                    {post.emoji}\n                  </div>\n                </div>\n\n                <Button\n                  title={post.key}\n                  size={\"small\"}\n                  onClick={async () => {\n                    window.open(\"https://adventurepizza.github.io/Assemble/?profile=\" + post.key);\n                  }}\n                >\n                  {post.username}{\" \"}\n                </Button>\n              </div>\n\n          ))\n\n          }\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n\nconst query_latest = `\nquery MyQuery {\n  tokens(where: {fa2_address: {_eq: \"KT1J6NY5AU61GzUX51n59wwiZcGJ9DrNTwbK\"}}, order_by: {minted_at: desc}, limit: 300) {\n    name\n    fa2_address\n    token_id\n    description\n    creators\n    minted_at\n  }\n}\n\n\n`\n\n\nconst query_owned = `\nquery ownedTokens ($address: String) {\n    tokens(where: {holdings: {holder_address: {_eq: $address}, amount: {_gt: \"0\"}}}) {\n      artifact_metadata\n      artifact_uri\n      artist_address\n      assets\n      attributes\n      burned_editions\n      contributors\n      creators\n      current_price_to_first_sales_price_diff\n      current_price_to_first_sales_price_pct\n      current_price_to_highest_sales_price_diff\n      current_price_to_highest_sales_price_pct\n      current_price_to_last_sales_price_diff\n      current_price_to_last_sales_price_pct\n      current_price_to_lowest_sales_price_diff\n      current_price_to_lowest_sales_price_pct\n      description\n      display_uri\n      editions\n      eightbid_creator_name\n      eightbid_rgb\n      external_uri\n      fa2_address\n      first_sales_price\n      formats\n      fx_issuer_id\n      fx_iteration\n      highest_offer_price\n      highest_sales_price\n      last_processed_event_id\n      last_processed_event_level\n      last_processed_event_timestamp\n      last_sale_at\n      last_sales_price\n      lowest_sales_price\n      metadata_uri\n      mime_type\n      mint_price\n      minted_at\n      minter_address\n      name\n      objkt_artist_collection_id\n      platform\n      price\n      right_uri\n      rights\n      royalties\n      royalties_total\n      sales_count\n      sales_volume\n      symbol\n      thumbnail_uri\n      token_id\n    }\n  }\n  \n`\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}