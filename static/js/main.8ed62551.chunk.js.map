{"version":3,"sources":["firebaseContext.tsx","Unfurl.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getProfileFB","Promise","resolve","isSuccessful","setProfileFB","getUnfurl","getAllProfilesFB","fetchBase","FirebaseProvider","children","useCallback","key","fetch","method","fetchRes","ok","json","profile","headers","body","JSON","stringify","message","statusText","url","Provider","value","Unfurl","useState","data","setData","useContext","tweet","setTweet","useEffect","res","image","startsWith","temp","split","replace","length","slice","temp2","grab","Card","tweetId","includes","onClick","window","open","alt","src","width","title","description","fallbackImageSrc","Button","size","dAppClient","DAppClient","name","socketURL","location","hostname","tempID","io","transports","uuidv4","App","activeAccount","setActiveAccount","setSynced","setShowUnsync","tokens","setTokens","more","setMore","setOwned","setBgImage","postInput","setPostInput","postType","setPostType","attachment","setAttachment","statusHistory","setStatusHistory","posts","setPosts","setUsernameInput","timestamp","Date","now","username","showEmoji","setShowEmoji","handleChangeInput","event","target","song","console","log","type","id","handleKeyPress","updateStatus","getRandomNft","address","query","query_owned","variables","then","result","rand","Math","floor","random","ressult","display_uri","concat","sort","a","b","parseFloat","sync","getActiveAccount","clearActiveAccount","requestPermissions","permissions","getBG","index","bg","history","getProfiles","reso","reverse","i","creators","getPosts","getAcc","convertdate","x","mintedat","parse","minted_at","ress","map","getTokens","query_latest","getRandomInt","max","bgObjkt","unsync","style","display","justifyContent","TextField","label","variant","placeholder","onChange","onKeyPress","fullWidth","textAlign","height","frameBorder","allow","marginLeft","marginRight","emoji","onSelect","native","alignItems","border","marginInline","fontSize","post","padding","backgroundImage","marginBlock","backgroundColor","token_id","color","whiteSpace","WebkitLineClamp","WebkitBoxOrient","overflowWrap","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.8ed62551.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\ninterface IProfile {\n  color: string;\n  timestamp: Date;\n  key: string;\n  username: string;\n}\nexport interface IFirebaseContext {\n  getProfileFB: (key: string) => Promise<IFetchResponseBase>;\n  setProfileFB: (profile: IProfile) => Promise<IFetchResponseBase>;\n  getUnfurl: () => Promise<IFetchResponseBase>;\n  getAllProfilesFB: () => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  setProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  getUnfurl: () => Promise.resolve({ isSuccessful: false }),\n  getAllProfilesFB: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://socialapp-tezos-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getProfileFB = useCallback(\n    async (key: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile/${key}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setProfileFB = useCallback(\n    async (profile: IProfile): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ profile: profile }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getUnfurl =\n    useCallback(async (url): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/unfurl`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ url: url }),\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  const getAllProfilesFB =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/allProfiles`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getProfileFB,\n        setProfileFB,\n        getAllProfilesFB,\n        getUnfurl\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card } from \"@material-ui/core\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { LinkPreview } from '@dhaiwat10/react-link-preview';\nimport { Button } from \"@material-ui/core\";\nimport { Tweet } from 'react-twitter-widgets'\n\ntype UnfurlProps = {\n  url: string\n}\n\nexport const Unfurl = ({ url }: UnfurlProps) => {\n  const [data, setData] = useState();\n  const { getUnfurl } = useContext(FirebaseContext);\n  const [tweet, setTweet] = useState();\n\n  useEffect(() => {\n    async function grab() {\n      let res = await getUnfurl(url);\n\n      ////console.log(res);\n\n      if (res && (res.image) && (res.image).startsWith(\"./\")) {\n        let temp = url.split(\"/\");\n\n        res.image = url.replace(temp[temp.length - 1], (res.image).slice(2));\n      }\n\n      if (url.startsWith(\"https://twitter.com\")) {\n        let temp = url.split(\"/\");\n\n        ////console.log(temp);\n        if (temp & temp[5]) {\n          let temp2 = temp[5].split(\"?\");\n          setTweet(temp2[0]);\n        }\n\n      }\n\n      setData(res);\n    }\n    grab();\n  }, [getUnfurl, url]);\n\n  return (\n    <Card>\n\n      {tweet &&\n        <Tweet tweetId={tweet} />\n      }\n\n      {!tweet && url && <>\n        {data && !(url.includes(\"youtube.com\") || url.includes(\"https://youtu.be\")) && data.image &&\n          <div onClick={() => window.open(url, \"_blank\")}>\n            <img alt={url} src={data.image} width=\"100%\" />\n            <h4>{data.title}</h4>\n\n            <p>{data.description}</p>\n            <p><small>{url}</small></p>\n          </div>\n        }\n        {data && !data.image &&\n          <LinkPreview url={url} fallbackImageSrc={\"https://www.pngitem.com/pimgs/m/43-430934_magnifying-glass-magnifying-glass-png-icon-transparent-png.png\"} />\n        }\n        {!data &&\n          <div>\n            <Button\n              size={\"small\"}\n              title={\"unsync\"}\n              onClick={() => { window.open(url, \"_blank\") }}\n            >\n              <u>{url.length > 60 ? url.slice(0, 30) + \"...\" + url.slice(url.length - 31, url.length - 1) : url}</u>{\" \"}\n            </Button>\n          </div>\n\n        }\n      </>}\n    </Card>\n  );\n}\n\n","// @ts-nocheck\nimport './App.css';\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card, Button, TextField } from \"@material-ui/core\";\nimport io from \"socket.io-client\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { Unfurl } from './Unfurl';\n\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://socialapp-tezos-backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst tempID = uuidv4();\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [tokens, setTokens] = useState();\n  const [more, setMore] = useState(-1);\n  const [owned, setOwned] = useState();\n  const [bgImage, setBgImage] = useState(\"\");\n  const [postInput, setPostInput] = React.useState(\"\");\n  //0 text 1 spotify 2 url 3 emoji\n  const [postType, setPostType] = React.useState(0);\n  const [attachment, setAttachment] = React.useState(\"🐸\");\n\n  const { getProfileFB, setProfileFB, getAllProfilesFB } =\n    useContext(FirebaseContext);\n\n  const [statusHistory, setStatusHistory] = useState([]);\n\n  const [posts, setPosts] = useState([]);\n\n  const [emoji, setEmoji] = useState(\"🐸\");\n  const [usernameInput, setUsernameInput] = React.useState(\"Anon\");\n\n  const [profile, setProfile] = useState({\n    attachment: attachment,\n    timestamp: Date.now(),\n    key: tempID,\n    username: \"\",\n  });\n\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPostInput(event.target.value)\n    let song = event.target.value;\n    let temp = song.split(\"/\");\n    console.log(temp)\n    /*\n        if (temp[2] === \"music.apple.com\") {\n          console.log(song.replace('https://', 'https://embed.'));\n          console.log(\"apple\");\n    \n          setSong(song.replace('https://', 'https://embed.'))\n          setPostType(1)\n        } else*/\n    if (temp[2] === \"open.spotify.com\") {\n      console.log({ type: temp[3], id: temp[4] });\n      console.log(\"spotify\");\n      setPostType(1)\n      setAttachment({ type: temp[3], id: temp[4] });\n\n    } else if (temp[0] === \"https:\") {\n      console.log(\"url\");\n      setPostType(2)\n      setAttachment(song);\n\n    } else {\n      console.log(\"text\");\n      setPostType(0)\n\n      if (showEmoji) {\n        setPostType(3)\n      }\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      updateStatus();\n    }\n  };\n\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getAllProfilesFB();\n      console.log(\"result\")\n      console.log(result)\n      setStatusHistory(result.history);\n    }\n    getProfiles();\n  }, [getAllProfilesFB]);\n\n\n  async function getRandomNft(address) {\n\n    //console.log(\"result\")\n    let ressult;\n    await fetch('https://unstable-do-not-use-in-production-api.teztok.com/v1/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: query_owned,\n        variables: { \"address\": address },\n      }\n      ),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //console.log(result)\n        if (result && result.data && result.data.tokens && result.data.tokens.length > 0) {\n          let rand = Math.floor(Math.random() * result.data.tokens.length)\n          //console.log(result.data.tokens[rand].display_uri)\n          ressult = result.data.tokens[rand].display_uri;\n\n        }\n      });\n    return ressult\n  }\n\n\n  useEffect(() => {\n\n    async function getPosts() {\n      if (tokens && tokens.length > 0 && statusHistory && statusHistory.length > 0) {\n        let reso = posts.concat(statusHistory)\n        reso = reso.concat(tokens)\n\n        reso.sort(function (a, b) {\n          return a.timestamp - b.timestamp;\n        });\n\n        reso.reverse()\n        console.log(reso)\n        reso = reso.slice(0, 20);\n        for (let i = 0; i < reso.length; i++) {\n          if (reso[i] && reso[i].creators && reso[i].creators[0]) {\n            let bg = await getRandomNft(reso[i].creators[0])\n            reso[i].bg = bg;\n            //console.log(bg)\n          } else if (reso[i] && reso[i].key) {\n\n            let bg = await getRandomNft(reso[i].key)\n            reso[i].bg = bg;\n            console.log(bg)\n\n          }\n        }\n        console.log(reso)\n        setPosts(reso)\n      }\n    }\n\n\n    getPosts()\n  }, [statusHistory, tokens]);\n\n\n  function updateStatus() {\n    if (activeAccount) {\n      let timestamp = Date.now();\n      let type;\n      if (postType === 0) {\n        type = \"text\"\n      } else if (postType === 1) {\n        type = \"network3\"\n      } else if (postType === 2) {\n        type = \"url\"\n      } else if (postType === 3) {\n        type = \"network2\"\n      }\n      /*\n      //add socket\n      socket.emit(\"profile\", {\n        ...profile,\n        key: activeAccount.address,\n        username: postInput,\n        timestamp: timestamp,\n        attachment: attachment,\n        type: type,\n      });\n*/\n      setProfileFB({\n        ...profile,\n        key: activeAccount.address,\n        username: postInput,\n        timestamp: timestamp,\n        attachment: attachment,\n        type: type,\n      });\n\n\n\n\n      setPosts(\n        posts\n          .concat([\n            {\n              ...profile,\n\n              key: activeAccount.address,\n              username: postInput,\n              timestamp: timestamp,\n              attachment: attachment,\n              type: type,\n            },\n          ])\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n\n\n\n\n      setUsernameInput(\"\");\n      setPostInput(\"\")\n      setAttachment(\"\")\n    } else {\n      sync();\n    }\n  }\n\n\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  useEffect(() => {\n\n    function convertdate(x) {\n      let mintedat = Date.parse(x.minted_at)\n      x.timestamp = mintedat\n      return x;\n    }\n\n    //get tokens KT1J6NY5AU61GzUX51n59wwiZcGJ9DrNTwbK\n    async function getTokens(query) {\n      let created;\n      await fetch('https://unstable-do-not-use-in-production-api.teztok.com/v1/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: {},\n        }\n        ),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result)\n\n          if (result.data && result.data.tokens) {\n            let ress = result.data.tokens.map((x) => convertdate(x));\n            console.log(ress)\n            setTokens(result.data.tokens)\n          }\n        });\n    }\n    getTokens(query_latest);\n  }, []);\n\n\n  useEffect(() => {\n    function getRandomInt(max) {\n      return Math.floor(Math.random() * max);\n    }\n\n    async function getTokens(query) {\n      let created;\n      await fetch('https://unstable-do-not-use-in-production-api.teztok.com/v1/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query,\n          variables: { \"address\": activeAccount ? activeAccount.address : \"\" },\n        }\n        ),\n      })\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result)\n          if (result.data && result.data.tokens)\n            setOwned(result.data.tokens)\n\n          let bgObjkt\n          if (result.data.tokens.length > 0) {\n            let rand = getRandomInt(result.data.tokens.length)\n            bgObjkt = result.data.tokens[rand].display_uri;\n          }\n          if (bgObjkt) {\n            setBgImage(bgObjkt.replace('ipfs://', 'https://ipfs.io/ipfs/'));\n          }\n        });\n    }\n    getTokens(query_owned);\n  }, [activeAccount]);\n\n  function toBGImage(index) {\n    if (owned && owned.length > 0) {\n      let bgObjkt = owned[index % (owned.length - 1)].display_uri;\n      if (bgObjkt)\n        return bgObjkt.replace('ipfs://', 'https://ipfs.io/ipfs/')\n    }\n  }\n\n  function getBG(index) {\n    //console.log(1)\n    if (posts && posts.length >= index && posts[index].bg) {\n      //console.log(2)\n      //console.log(posts[index].bg.replace('ipfs://', 'https://ipfs.io/ipfs/'))\n      return posts[index].bg.replace('ipfs://', 'https://ipfs.io/ipfs/')\n    }\n  }\n\n\n  return (\n    <div>\n      <Button\n        size={\"small\"}\n        onClick={() => {\n          if (activeAccount) {\n            unsync()\n          } else {\n            sync()\n          }\n        }}\n      >\n        {\" \"}\n        {activeAccount ? (\n          <u>unsync</u>\n        ) : (\n          <u>sync</u>\n        )}{\" \"}\n      </Button>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div style={{ width: \"56.25vw\" }}>\n          <div>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Add a message here\"\n              variant=\"outlined\"\n              placeholder=\"Add a message here\"\n              onChange={handleChangeInput}\n              value={postInput}\n              onKeyPress={handleKeyPress}\n              fullWidth\n            />\n\n            <Button\n              size={\"small\"}\n              onClick={() => {\n                //0 text 1 spotify 2 url 3 emoji\n                setShowEmoji(false)\n                setPostType(2)\n              }}\n            >\n              url\n            </Button>\n            <Button\n              size={\"small\"}\n              onClick={() => {\n                setShowEmoji(false)\n                setPostType(1)\n              }}\n            >\n              spotify\n            </Button>\n            <Button\n              size={\"small\"}\n              onClick={() => {\n                setShowEmoji(true)\n                setPostType(3)\n              }}\n            >\n              emoji\n            </Button>\n            <div style={{ textAlign: \"right\" }}>\n              <Button\n                size={\"small\"}\n                onClick={() => {\n                  updateStatus()\n                }}\n                variant=\"outlined\"\n              >\n                send\n              </Button>\n            </div>\n          </div>\n\n\n          <br></br>\n\n          <div>\n            <div>\n              preview\n            </div>\n            {attachment && attachment.type &&\n              <iframe\n                src={`https://open.spotify.com/embed/${attachment.type}/${attachment.id}?utm_source=generator`}\n                width=\"100%\"\n                height=\"152\"\n                frameBorder=\"0\"\n\n                allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n              ></iframe>\n            }\n            {postType === 2 &&\n              <Unfurl url={attachment} />\n            }\n          </div>\n\n          {showEmoji &&\n            <div style={{ width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n              <Picker\n                title=\"Pick your emoji\"\n                emoji=\"point_up\"\n                onSelect={(emoji) => {\n                  console.log(emoji);\n                  setAttachment(emoji.native);\n                }}\n              />\n              <br></br>\n\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <TextField\n                  id=\"outlined-basic\"\n                  size={\"small\"}\n                  label=\"info\"\n                  variant=\"outlined\"\n                  placeholder=\"Status\"\n                  onChange={handleChangeInput}\n                  value={postInput}\n                  onKeyPress={handleKeyPress}\n                />\n                <div\n                  style={{\n                    width: 50,\n                    height: 30,\n                    border: \"solid 4px \",\n                    marginInline: 4,\n                  }}\n                >\n                  <div style={{ textAlign: \"center\", fontSize: \"1.4em\" }}>\n                    {attachment}\n                  </div>\n                </div>\n                <Button\n                  size={\"small\"}\n                  title={\"update status\"}\n                  onClick={() => {\n                    updateStatus();\n                  }}\n                >\n                  {\" \"}\n                  {activeAccount ? (\n                    <u>update status</u>\n                  ) : (\n                    <u>sync to join network1</u>\n                  )}{\" \"}\n                </Button>\n              </div>\n            </div>}\n\n          {/*\n          statusHistory &&\n            statusHistory.map((profile) => (\n              <div\n                key={profile.timestamp}\n                style={{ textAlign: \"center\", marginInline: 6 }}\n              >\n                <div\n                  style={{\n                    width: 100,\n                    height: 30,\n                    border: \"solid 4px \",\n                    marginInline: 4,\n                  }}\n                >\n                  <div style={{ textAlign: \"center\", fontSize: \"1.4em\" }}>\n                    {profile.emoji}\n                  </div>\n                </div>\n\n                <Button\n                  title={profile.key}\n                  size={\"small\"}\n                  onClick={async () => {\n                    window.open(\"https://adventurepizza.github.io/Assemble/?profile=\" + profile.key);\n                  }}\n                >\n                  {profile.username}{\" \"}\n                </Button>\n              </div>\n            ))*/}\n\n          {/*tokens && tokens.map((token, index) => (\n            <div key={index} style={{ padding: 80, backgroundImage: `url(${toBGImage(index)})` }}>\n              <div style={{ marginBlock: 20, padding: 2, backgroundColor: \"white\" }}>\n\n                <div style={{ display: \"flex\", justifyContent: \"right\" }}>\n                  <Button size=\"small\" onClick={() => { window.open(`https://typed.art/${token.token_id}`, \"_blank\") }} style={{ color: \"black\" }}>{token.token_id}#</Button>\n                </div>\n                <p style={{ whiteSpace: 'pre-wrap', WebkitLineClamp: more === index ? 50 : 8, WebkitBoxOrient: \"vertical\", display: \"-webkit-box\", overflowWrap: \"break-word\", overflow: \"hidden\" }}>\n                  {token.description}\n                </p>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  {token.description && token.description.split(/\\r\\n|\\r|\\n/).length > 8 && <Button size=\"small\" onClick={() => { setMore(index) }} style={{ color: \"black\" }}>{more !== index ? \"more\" : \"less\"}</Button>}\n                  <div style={{ marginLeft: \"auto\" }}>\n                    <Button size=\"small\" onClick={() => { window.open(`https://assemblr.xyz/?profile=${token.creators[0]}`, \"_blank\") }} style={{ color: \"black\" }}>{token.creators[0] && token.creators[0].slice(0, 10) + \"...\" + token.creators[0].slice(28, 36)}</Button>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          ))\n*/\n          }\n\n          {posts && posts.map((post, index) => (\n\n            <>\n              {post.name &&\n                <div key={index} style={{ padding: 300, backgroundImage: `url(${getBG(index)})` }}>\n                  <div style={{ marginBlock: 20, padding: 2, backgroundColor: \"white\" }}>\n\n                    <div style={{ display: \"flex\", justifyContent: \"right\" }}>\n                      <Button size=\"small\" onClick={() => { window.open(`https://typed.art/${post.token_id}`, \"_blank\") }} style={{ color: \"black\" }}>{post.token_id}#</Button>\n                    </div>\n                    <p style={{ whiteSpace: 'pre-wrap', WebkitLineClamp: more === index ? 50 : 8, WebkitBoxOrient: \"vertical\", display: \"-webkit-box\", overflowWrap: \"break-word\", overflow: \"hidden\" }}>\n                      {post.description}\n                    </p>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      {post.description && post.description.split(/\\r\\n|\\r|\\n/).length > 8 && <Button size=\"small\" onClick={() => { setMore(index) }} style={{ color: \"black\" }}>{more !== index ? \"more\" : \"less\"}</Button>}\n                      <div style={{ marginLeft: \"auto\" }}>\n                        <Button size=\"small\" onClick={() => { window.open(`https://assemblr.xyz/?profile=${post.creators[0]}`, \"_blank\") }} style={{ color: \"black\" }}>{post.creators[0] && post.creators[0].slice(0, 10) + \"...\" + post.creators[0].slice(28, 36)}</Button>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>}\n\n\n              {\n                post && post.type === \"network2\" &&\n\n                <div key={index} style={{ padding: 300, backgroundImage: `url(${getBG(index)})` }}>\n\n\n                  <div\n                    key={post.timestamp}\n                    style={{ textAlign: \"center\", marginInline: 6, backgroundColor: \"white\" }}\n                  >\n                    <div\n                      style={{\n                        border: \"solid 4px \",\n                        marginInline: 4,\n                        display: \"flex\", justifyContent: \"center\"\n                      }}\n                    >\n                      <div style={{ textAlign: \"center\", fontSize: \"14em\", display: \"flex\", justifyContent: \"center\" }}>\n                        {post.attachment}\n                      </div>\n                    </div>\n\n                    <Button\n                      title={post.key}\n                      size={\"small\"}\n                      onClick={async () => {\n                        window.open(\"https://adventurepizza.github.io/Assemble/?profile=\" + post.key);\n                      }}\n                    >\n                      {post.username}{\" \"}\n                    </Button>\n                  </div>\n\n                </div>\n              }\n\n              {post && post.type === \"network3\" && post.attachment && post.attachment.type &&\n\n                <div key={index} style={{ padding: 300, backgroundImage: `url(${getBG(index)})` }}>\n\n                  <iframe\n                    title={post.timestamp}\n                    src={`https://open.spotify.com/embed/${post.attachment.type}/${post.attachment.id}?utm_source=generator`}\n                    width=\"100%\"\n                    height=\"152\"\n                    frameBorder=\"0\"\n\n                    allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                  ></iframe>\n\n                </div>\n              }\n\n              {post && post.type === \"url\" &&\n\n                <div key={index} style={{ padding: 300, backgroundImage: `url(${getBG(index)})` }}>\n\n                  <Unfurl url={post.attachment}></Unfurl>\n\n                </div>\n\n              }\n\n              {post && post.type === \"text\" &&\n                <div key={index} style={{ padding: 300, backgroundImage: `url(${getBG(index)})` }}>\n                  <div style={{ backgroundColor: \"white\", padding: 20 }}>\n                    {post.username}\n                  </div>\n                </div>\n              }\n            </>\n\n\n\n          ))\n\n          }\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n\nconst query_latest = `\nquery MyQuery {\n  tokens(where: {fa2_address: {_eq: \"KT1J6NY5AU61GzUX51n59wwiZcGJ9DrNTwbK\"}}, order_by: {minted_at: desc}, limit: 30) {\n    name\n    fa2_address\n    token_id\n    description\n    creators\n    minted_at\n  }\n}\n\n\n`\n\n\nconst query_owned = `\nquery ownedTokens ($address: String) {\n    tokens(where: {holdings: {holder_address: {_eq: $address}, amount: {_gt: \"0\"}}}) {\n      artifact_metadata\n      artifact_uri\n      artist_address\n      assets\n      attributes\n      burned_editions\n      contributors\n      creators\n      current_price_to_first_sales_price_diff\n      current_price_to_first_sales_price_pct\n      current_price_to_highest_sales_price_diff\n      current_price_to_highest_sales_price_pct\n      current_price_to_last_sales_price_diff\n      current_price_to_last_sales_price_pct\n      current_price_to_lowest_sales_price_diff\n      current_price_to_lowest_sales_price_pct\n      description\n      display_uri\n      editions\n      eightbid_creator_name\n      eightbid_rgb\n      external_uri\n      fa2_address\n      first_sales_price\n      formats\n      fx_issuer_id\n      fx_iteration\n      highest_offer_price\n      highest_sales_price\n      last_processed_event_id\n      last_processed_event_level\n      last_processed_event_timestamp\n      last_sale_at\n      last_sales_price\n      lowest_sales_price\n      metadata_uri\n      mime_type\n      mint_price\n      minted_at\n      minter_address\n      name\n      objkt_artist_collection_id\n      platform\n      price\n      right_uri\n      rights\n      royalties\n      royalties_total\n      sales_count\n      sales_volume\n      symbol\n      thumbnail_uri\n      token_id\n    }\n  }\n  \n`\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}